import randomimport subprocessimport psutilimport refrom subprocess import check_output,DEVNULL,STDOUTimport timeimport winregimport osfrom os import pathimport platformimport urllibfrom bs4 import BeautifulSoupimport requests##########################################def initialize_VPN():    opsys = platform.system()    ####windows#####    if opsys == "Windows":        print("\n################\n"              "# SYSTEM CHECK #\n"              "################\n")        #set windows path#        option_1_path = 'C:/Program Files/NordVPN'        option_2_path = 'C:/Program Files (x86)/NordVPN'        custom_path = str()        if path.exists(option_1_path) == True:            win_path = option_1_path        elif path.exists(option_2_path) == True:            win_path = option_2_path        else:            custom_path = input("It looks like you've installed NordVPN in an uncommon folder. Would you mind telling me which folder? (e.g. D:/customfolder/nordvpn)")            while path.exists(custom_path) == False:                custom_path = input("I'm sorry, but this folder doesn't exist. Please double-check your input.")            win_path = custom_path        print("NordVPN installation check: \N{check mark}")        #check if nordvpn service is already running in the background        check_service = "nordvpn-service.exe" in (p.name() for p in psutil.process_iter())        if check_service is False:            raise Exception("NordVPN service hasn't been initialized, please start this service in [task manager] --> [services] and restart your script")        print("NordVPN service check: \N{check mark}")        # start NordVPN app and disconnect from VPN service if necessary#        print("Opening NordVPN app and disconnecting if necessary...")        open_nord_win = subprocess.Popen(["nordvpn", "-d"],shell=True,cwd=win_path,stdout=DEVNULL)        while ("NordVPN.exe" in (p.name() for p in psutil.process_iter())) == False:            time.sleep(3)        open_nord_win.kill()        print("NordVPN app launched: \N{check mark}")        print("#####################################")    ###################################    #provide settings for VPN rotation#    ###################################    areas_list = open("countrylist.txt", 'r').read().split('\n')    country_dict = {'countries':areas_list[0:60],'europe': areas_list[0:36], 'americas': areas_list[36:44],                    'africa east india': areas_list[49:60],'asia pacific': areas_list[49:60],                    'regions australia': areas_list[60:65],'regions canada': areas_list[65:68],                    'regions germany': areas_list[68:70], 'regions india': areas_list[70:72],                    'regions united states': areas_list[72:len(areas_list)]}    input_needed = 1    while input_needed == 1:        settings_servers = input("\nI want to connect to....\n"                                 "------------------------\n\n"                                 "Type 'help' for available options\n").strip().lower()        if settings_servers.lower().strip() == 'help':            settings_servers = input("\nOptions:\n"                  "##########\n"                  "* type 'quick' to choose quickconnect \n"                  "* Single country or local region (e.g.Germany)\n"                  "* World regions (europe/americas/africa east india/asia pacific)\n"                  "* Random multiple countries and/or local regions (e.g.France,Netherlands,Chicago)\n"                  "* Random (n) countries (e.g. random countries 10)\n"                  "* Random (n) regions in country (e.g. random regions United States 6)\n"\                  "* Speciality group name (e.g. Dedicated IP)\n"                  "* Specific list of servers (e.g. Belgium #163,France #417)\n").strip().lower()        if opsys == "Windows":            nordvpn_command = ["nordvpn", "-c"]        if opsys == "Linux":            nordvpn_command = ["nordvpn", "c"]        if settings_servers == "quick":            quickconnect_check = input("\nYou are choosing for the quick connect option. Are you sure? (y/n)\n")            if 'y' in quickconnect_check:                sample_countries = [""]                input_needed = 0                pass        elif "#" in settings_servers:            if opsys == "Windows":                sample_countries = [area.strip() for area in settings_servers.split(',')]                nordvpn_command.append("-n")            input_needed = 0        else:            if opsys == "Windows":                nordvpn_command.append("-g")            if "random" in settings_servers:                if "regions" in settings_servers:                    try:                        sample_countries = country_dict[re.sub("random", "", settings_servers).rstrip('0123456789.- ').lower().strip()]                        input_needed = 0                    except:                        input("\n\nThere are no specific regions available in this country, please try again.\nPress enter to continue.\n")                    if re.compile(r'[^0-9]').search(settings_servers.strip()):                        samplesize = int(re.sub("[^0-9]", "", settings_servers).strip())                        sample_countries = random.sample(sample_countries, samplesize)                else:                    if re.compile(r'[^0-9]').search(settings_servers.strip()):                        samplesize = int(re.sub("[^0-9]", "", settings_servers).strip())                        sample_countries = random.sample(country_dict['countries'], samplesize)                        input_needed = 0                    else:                        sample_countries = country_dict['countries']                        input_needed = 0            elif settings_servers in country_dict.keys():                sample_countries = country_dict[settings_servers]                input_needed = 0            else:                sample_countries = [area.strip() for area in settings_servers.split(',')] #take into account possible superfluous spaces#                approved_regions = 0                for region in sample_countries:                    if region in [area.lower() for area in areas_list]:                        approved_regions = approved_regions + 1                        pass                    else:                        message = "\n\nThe region " + region + " is not available. Please check for spelling errors.\nPress enter to continue.\n"                        input(message)                if approved_regions == len(sample_countries):                    input_needed = 0    save_settings = input("\nDo you want to save these settings in your project folder? (y/n)\n")    if "y" in save_settings:        settings = open("settings.txt", "a+")        settings.write(str(nordvpn_command))        settings.write(str(sample_countries))        settings.close()        print("Saved!")    else:        print("Done!\n")    instructions = {'command':nordvpn_command,'settings':sample_countries}    if opsys == "Windows":        instructions['cwd_path'] = win_path    else:        instructions['cwd_path'] = "/"    return instructions    #initialize first VPN connection#    ############    #rotate VPN#    ############def rotate_VPN(instructions,google_check = 0):    command = instructions['command']    settings = instructions['settings']    cwd_path = instructions['cwd_path']    for i in range(2):        try:            current_ip = new_ip = urllib.request.urlopen('https://ident.me').read().decode('utf8')        except urllib.error.URLError:            print("Can't fetch current ip. Retrying...")            time.sleep(10)            continue        else:            print("\nYour current ip-address is:", current_ip)            break    else:        raise Exception("Can't fetch current ip, even after retrying... Check your internet connection.")    for i in range(4):        if len(settings) > 1:            settings_pick = list([random.choice(settings)])        else:            settings_pick = settings        input = command + settings_pick        if settings == "":            print("\nConnecting you to the best possible server (quick connect option)...")        else:            print("\nConnecting you to", settings_pick[0], "...\n")        try:            new_connection = subprocess.Popen(input, shell=True, cwd=cwd_path)            new_connection.wait()        except:            print("\n An unknown error occurred while connecting to a different server! Retrying...\n")            time.sleep(15)            continue        for i in range(12):            try:                new_ip = urllib.request.urlopen('https://ident.me').read().decode('utf8')            except:                time.sleep(5)                continue            else:                if new_ip == current_ip:                    time.sleep(5)                    continue                else:                    break        else:            pass        if new_ip == current_ip:            print("ip-address hasn't changed. Retrying...\n")            time.sleep(10)            continue        else:            print("your new ip-address is:", new_ip)        if google_check == 1:            print("\nPerforming captcha-check on Google search and Youtube...\n"                  "---------------------------")            try:                google_search_check = BeautifulSoup(                    requests.get("https://www.google.be/search?q=why+is+python+so+hard").content,"html.parser")                youtube_video_check = BeautifulSoup(                    requests.get("https://www.youtube.com/watch?v=dQw4w9WgXcQ").content,"html.parser")                google_captcha = google_search_check.find('div',id="recaptcha")                youtube_captcha = youtube_video_check.find('div', id = "recaptcha")                if None not in (google_captcha,youtube_captcha):                    print("Google throws a captcha. I'll pick a different server...")                    time.sleep(5)                    continue            except:                print("Can't load Google page. I'll pick a different server...")                time.sleep(5)                continue            else:                print("Google and YouTube don't throw any Captcha's: \N{check mark}")                break        else:            break    else:        raise Exception("Unable to connect to a new server. Please check your internet connection.\n")    print("\nDone! Enjoy your new server.\n")instructions = initialize_VPN()for i in range(100):    print("Search #",i,         "\n------------")    rotate_VPN(instructions,google_check=1)    time.sleep(20)